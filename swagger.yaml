openapi: 3.0.0
info:
  title: FI-Money Backend API
  description: REST API for user authentication and product management.
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Local development
  - url: https://your-production-domain.com
    description: Production server

paths:
  /api/auth/register:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Validation error or user already exists

  /api/auth/login:
    post:
      summary: Login and get JWT
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials

  /api/products:
    post:
      summary: Create a new product
      tags:
        - Products
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Validation error
    get:
      summary: Get all products
      tags:
        - Products
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /api/products/{id}/quantity:
    put:
      summary: Update product quantity
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Product ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  example: 15
      responses:
        '200':
          description: Product quantity updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: john_doe
        password:
          type: string
          format: password
          example: mySecurePass123
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: john_doe
        password:
          type: string
          format: password
          example: mySecurePass123
    AuthResponse:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
    ProductRequest:
      type: object
      required:
        - name
        - sku
        - type
        - quantity
      properties:
        name:
          type: string
          example: Apple iPhone 15
        sku:
          type: string
          example: IP15-256GB-BLK
        type:
          type: string
          example: Electronics
        quantity:
          type: integer
          example: 10
    Product:
      type: object
      properties:
        _id:
          type: string
          example: 64cfa0e5f2d8f5a9a9b9a9a9
        name:
          type: string
          example: Apple iPhone 15
        sku:
          type: string
          example: IP15-256GB-BLK
        type:
          type: string
          example: Electronics
        quantity:
          type: integer
          example: 10
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
